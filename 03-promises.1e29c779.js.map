{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,SAkDA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAzDPQ,EAAAZ,GAASa,OAAOC,KAAK,CACnBC,MAAO,QACPZ,SAAU,gBACVa,SAAU,OACVC,QAAS,EACTC,cAAc,IAGHC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAeC,OAAOH,EAAMI,OAAOC,SAASvB,MAAMwB,OAClDC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEvC,GAARE,GAAU,EAGZ,OAFAR,EAAMI,OAAOK,aACbnB,EAAAZ,GAASa,OAAOmB,QAAQ,4BAM1B,IAFA,IAAIC,EAAQT,EAEHU,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACrDhC,EAAcgC,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MACjBQ,EAAAZ,GAASa,OAAOwB,QACd,uBAAwCC,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,M,IAGjDmC,OAAM,SAAAH,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MAClBQ,EAAAZ,GAASa,OAAOmB,QACd,sBAAuCM,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,M,IAGnD6B,GAASJ,C","sources":["src/js/03-promises.js"],"sourcesContent":["//Для відображення повідомлень користувачеві, замість console.log(),\n//використовуй бібліотеку notiflix.\nimport Notiflix from 'notiflix';\n\n//Initialize the Notify Module with some options\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-center',\n  distance: '10px',\n  opacity: 1,\n  clickToClose: true,\n});\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const initialDelay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  //Треба вибрати amount > 0\n  if (amount <= 0) {\n    event.target.reset();\n    Notiflix.Notify.failure('Please choose amount > 0');\n    return;\n  }\n\n  let delay = initialDelay;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\n//Напиши скрипт, який на момент сабміту форми викликає функцію\n//createPromise(position, delay) стільки разів, скільки ввели в поле amount.\n//Під час кожного виклику передай їй номер промісу(position), що створюється, і затримку,\n//враховуючи першу затримку(delay), введену користувачем, і крок(step).\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","init","width","distance","opacity","clickToClose","document","querySelector","addEventListener","event","preventDefault","initialDelay","Number","target","elements","value","step","amount","reset","failure","delay1","position1","then","param","success","concat","catch"],"version":3,"file":"03-promises.1e29c779.js.map"}